{"ast":null,"code":"import React,{useEffect,useState}from'react';import KanbanBoard from'./components/KanbanBoard';import{fetchTickets}from'./services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const App=()=>{const[tickets,setTickets]=useState([]);// Initialize as an empty array\nconst[users,setUsers]=useState([]);// For potential use later\nconst[grouping,setGrouping]=useState('status');// Default grouping by status\nconst[ordering,setOrdering]=useState('priority');// Default ordering by priority\nuseEffect(()=>{const savedView=JSON.parse(localStorage.getItem('kanbanView'))||{};setGrouping(savedView.grouping||'status');setOrdering(savedView.ordering||'priority');fetchTickets().then(data=>{setTickets(data.tickets||[]);// Extract the `tickets` array\nsetUsers(data.users||[]);// Extract the `users` array (optional)\n}).catch(error=>console.error('Failed to fetch tickets:',error));},[]);const saveViewState=(grouping,ordering)=>{localStorage.setItem('kanbanView',JSON.stringify({grouping,ordering}));};const handleGroupingChange=newGrouping=>{setGrouping(newGrouping);saveViewState(newGrouping,ordering);};const handleOrderingChange=newOrdering=>{setOrdering(newOrdering);saveViewState(grouping,newOrdering);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(KanbanBoard,{tickets:tickets,users:users// Pass users to the KanbanBoard\n,grouping:grouping,ordering:ordering,onGroupingChange:handleGroupingChange,onOrderingChange:handleOrderingChange})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","KanbanBoard","fetchTickets","jsx","_jsx","App","tickets","setTickets","users","setUsers","grouping","setGrouping","ordering","setOrdering","savedView","JSON","parse","localStorage","getItem","then","data","catch","error","console","saveViewState","setItem","stringify","handleGroupingChange","newGrouping","handleOrderingChange","newOrdering","children","onGroupingChange","onOrderingChange"],"sources":["C:/Users/hp/OneDrive/Documents/QuickShell/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport KanbanBoard from './components/KanbanBoard';\r\nimport { fetchTickets } from './services/api';\r\n\r\nconst App = () => {\r\n  const [tickets, setTickets] = useState([]); // Initialize as an empty array\r\n  const [users, setUsers] = useState([]);    // For potential use later\r\n  const [grouping, setGrouping] = useState('status'); // Default grouping by status\r\n  const [ordering, setOrdering] = useState('priority'); // Default ordering by priority\r\n\r\n  useEffect(() => {\r\n    const savedView = JSON.parse(localStorage.getItem('kanbanView')) || {};\r\n    setGrouping(savedView.grouping || 'status');\r\n    setOrdering(savedView.ordering || 'priority');\r\n\r\n    fetchTickets()\r\n      .then((data) => {\r\n        setTickets(data.tickets || []); // Extract the `tickets` array\r\n        setUsers(data.users || []);    // Extract the `users` array (optional)\r\n      })\r\n      .catch((error) => console.error('Failed to fetch tickets:', error));\r\n  }, []);\r\n\r\n  const saveViewState = (grouping, ordering) => {\r\n    localStorage.setItem('kanbanView', JSON.stringify({ grouping, ordering }));\r\n  };\r\n\r\n  const handleGroupingChange = (newGrouping) => {\r\n    setGrouping(newGrouping);\r\n    saveViewState(newGrouping, ordering);\r\n  };\r\n\r\n  const handleOrderingChange = (newOrdering) => {\r\n    setOrdering(newOrdering);\r\n    saveViewState(grouping, newOrdering);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <KanbanBoard\r\n          tickets={tickets}\r\n          users={users} // Pass users to the KanbanBoard\r\n          grouping={grouping}\r\n          ordering={ordering}\r\n          onGroupingChange={handleGroupingChange}\r\n          onOrderingChange={handleOrderingChange}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,OAASC,YAAY,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC5C,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAAK;AAC3C,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,QAAQ,CAAC,CAAE;AACpD,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,UAAU,CAAC,CAAE;AAEtDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,SAAS,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAI,CAAC,CAAC,CACtEP,WAAW,CAACG,SAAS,CAACJ,QAAQ,EAAI,QAAQ,CAAC,CAC3CG,WAAW,CAACC,SAAS,CAACF,QAAQ,EAAI,UAAU,CAAC,CAE7CV,YAAY,CAAC,CAAC,CACXiB,IAAI,CAAEC,IAAI,EAAK,CACdb,UAAU,CAACa,IAAI,CAACd,OAAO,EAAI,EAAE,CAAC,CAAE;AAChCG,QAAQ,CAACW,IAAI,CAACZ,KAAK,EAAI,EAAE,CAAC,CAAK;AACjC,CAAC,CAAC,CACDa,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAAC,CACvE,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,aAAa,CAAGA,CAACd,QAAQ,CAAEE,QAAQ,GAAK,CAC5CK,YAAY,CAACQ,OAAO,CAAC,YAAY,CAAEV,IAAI,CAACW,SAAS,CAAC,CAAEhB,QAAQ,CAAEE,QAAS,CAAC,CAAC,CAAC,CAC5E,CAAC,CAED,KAAM,CAAAe,oBAAoB,CAAIC,WAAW,EAAK,CAC5CjB,WAAW,CAACiB,WAAW,CAAC,CACxBJ,aAAa,CAACI,WAAW,CAAEhB,QAAQ,CAAC,CACtC,CAAC,CAED,KAAM,CAAAiB,oBAAoB,CAAIC,WAAW,EAAK,CAC5CjB,WAAW,CAACiB,WAAW,CAAC,CACxBN,aAAa,CAACd,QAAQ,CAAEoB,WAAW,CAAC,CACtC,CAAC,CAED,mBACE1B,IAAA,QAAA2B,QAAA,cACI3B,IAAA,CAACH,WAAW,EACVK,OAAO,CAAEA,OAAQ,CACjBE,KAAK,CAAEA,KAAO;AAAA,CACdE,QAAQ,CAAEA,QAAS,CACnBE,QAAQ,CAAEA,QAAS,CACnBoB,gBAAgB,CAAEL,oBAAqB,CACvCM,gBAAgB,CAAEJ,oBAAqB,CACxC,CAAC,CACD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}