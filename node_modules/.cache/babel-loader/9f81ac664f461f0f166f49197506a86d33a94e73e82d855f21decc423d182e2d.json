{"ast":null,"code":"import React from'react';import TicketCard from'./TicketCard';import Dropdown from'./Dropdown';import'./KanbanBoard.css';// Pure CSS\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const KanbanBoard=_ref=>{let{tickets,users,grouping,ordering,onGroupingChange,onOrderingChange}=_ref;// Helper functions to group and sort\nconst groupBy=(tickets,key)=>{if(!Array.isArray(tickets))return{};return tickets.reduce((groups,ticket)=>{const groupKey=ticket[key]||'No Group';if(!groups[groupKey])groups[groupKey]=[];groups[groupKey].push(ticket);return groups;},{});};const sortTickets=tickets=>{return[...tickets].sort((a,b)=>{if(ordering==='priority')return b.priority-a.priority;if(ordering==='title')return a.title.localeCompare(b.title);return 0;});};// Group tickets based on the selected grouping\nconst groupedTickets=groupBy(tickets,grouping);return/*#__PURE__*/_jsxs(\"div\",{className:\"kanban-board\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(Dropdown,{label:\"Grouping\",options:['status','userId','priority'],selected:grouping,onChange:onGroupingChange}),/*#__PURE__*/_jsx(Dropdown,{label:\"Ordering\",options:['priority','title'],selected:ordering,onChange:onOrderingChange})]}),/*#__PURE__*/_jsx(\"div\",{className:\"board\",children:Object.keys(groupedTickets).map(groupKey=>{var _users$find;// Get the user name if grouping by userId\nconst groupName=grouping==='userId'?((_users$find=users.find(user=>user.id===groupKey))===null||_users$find===void 0?void 0:_users$find.name)||'Unassigned':groupKey;return/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"column-header\",children:groupName}),/*#__PURE__*/_jsx(\"div\",{className:\"tickets\",children:sortTickets(groupedTickets[groupKey]).map(ticket=>/*#__PURE__*/_jsx(TicketCard,{ticket:ticket,users:users},ticket.id))})]},groupKey);})})]});};export default KanbanBoard;","map":{"version":3,"names":["React","TicketCard","Dropdown","jsx","_jsx","jsxs","_jsxs","KanbanBoard","_ref","tickets","users","grouping","ordering","onGroupingChange","onOrderingChange","groupBy","key","Array","isArray","reduce","groups","ticket","groupKey","push","sortTickets","sort","a","b","priority","title","localeCompare","groupedTickets","className","children","label","options","selected","onChange","Object","keys","map","_users$find","groupName","find","user","id","name"],"sources":["C:/Users/hp/OneDrive/Documents/QuickShell/src/components/KanbanBoard.jsx"],"sourcesContent":["import React from 'react';\r\nimport TicketCard from './TicketCard';\r\nimport Dropdown from './Dropdown';\r\nimport './KanbanBoard.css'; // Pure CSS\r\n\r\nconst KanbanBoard = ({ tickets, users, grouping, ordering, onGroupingChange, onOrderingChange }) => {\r\n  // Helper functions to group and sort\r\n  const groupBy = (tickets, key) => {\r\n    if (!Array.isArray(tickets)) return {};\r\n\r\n    return tickets.reduce((groups, ticket) => {\r\n      const groupKey = ticket[key] || 'No Group';\r\n      if (!groups[groupKey]) groups[groupKey] = [];\r\n      groups[groupKey].push(ticket);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const sortTickets = (tickets) => {\r\n    return [...tickets].sort((a, b) => {\r\n      if (ordering === 'priority') return b.priority - a.priority;\r\n      if (ordering === 'title') return a.title.localeCompare(b.title);\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  // Group tickets based on the selected grouping\r\n  const groupedTickets = groupBy(tickets, grouping);\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      <div className=\"controls\">\r\n        <Dropdown\r\n          label=\"Grouping\"\r\n          options={['status', 'userId', 'priority']}\r\n          selected={grouping}\r\n          onChange={onGroupingChange}\r\n        />\r\n        <Dropdown\r\n          label=\"Ordering\"\r\n          options={['priority', 'title']}\r\n          selected={ordering}\r\n          onChange={onOrderingChange}\r\n        />\r\n      </div>\r\n      <div className=\"board\">\r\n        {Object.keys(groupedTickets).map((groupKey) => {\r\n          // Get the user name if grouping by userId\r\n          const groupName =\r\n            grouping === 'userId'\r\n              ? users.find((user) => user.id === groupKey)?.name || 'Unassigned'\r\n              : groupKey;\r\n\r\n          return (\r\n            <div key={groupKey} className=\"column\">\r\n              <h3 className=\"column-header\">{groupName}</h3>\r\n              <div className=\"tickets\">\r\n                {sortTickets(groupedTickets[groupKey]).map((ticket) => (\r\n                  <TicketCard key={ticket.id} ticket={ticket} users={users} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}