{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Documents\\\\QuickShell\\\\src\\\\components\\\\KanbanBoard.jsx\";\nimport React from 'react';\nimport TicketCard from './TicketCard';\nimport Dropdown from './Dropdown';\nimport './KanbanBoard.css'; // Pure CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  tickets,\n  users,\n  grouping,\n  ordering,\n  onGroupingChange,\n  onOrderingChange\n}) => {\n  // Helper functions to group and sort\n  const groupBy = (tickets, key) => {\n    if (!Array.isArray(tickets)) return {};\n    return tickets.reduce((groups, ticket) => {\n      const groupKey = ticket[key] || 'No Group';\n      if (!groups[groupKey]) groups[groupKey] = [];\n      groups[groupKey].push(ticket);\n      return groups;\n    }, {});\n  };\n  const sortTickets = tickets => {\n    return [...tickets].sort((a, b) => {\n      if (ordering === 'priority') return b.priority - a.priority;\n      if (ordering === 'title') return a.title.localeCompare(b.title);\n      return 0;\n    });\n  };\n\n  // Group tickets based on the selected grouping\n  const groupedTickets = groupBy(tickets, grouping);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        label: \"Grouping\",\n        options: ['status', 'userId', 'priority'],\n        selected: grouping,\n        onChange: onGroupingChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        label: \"Ordering\",\n        options: ['priority', 'title'],\n        selected: ordering,\n        onChange: onOrderingChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Object.keys(groupedTickets).map(groupKey => {\n        var _users$find;\n        // Get the user name if grouping by userId\n        const groupName = grouping === 'userId' ? ((_users$find = users.find(user => user.id === groupKey)) === null || _users$find === void 0 ? void 0 : _users$find.name) || 'Unassigned' : groupKey;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"column-header\",\n            children: groupName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tickets\",\n            children: sortTickets(groupedTickets[groupKey]).map(ticket => /*#__PURE__*/_jsxDEV(TicketCard, {\n              ticket: ticket,\n              users: users\n            }, ticket.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, groupKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","TicketCard","Dropdown","jsxDEV","_jsxDEV","KanbanBoard","tickets","users","grouping","ordering","onGroupingChange","onOrderingChange","groupBy","key","Array","isArray","reduce","groups","ticket","groupKey","push","sortTickets","sort","a","b","priority","title","localeCompare","groupedTickets","className","children","label","options","selected","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","_users$find","groupName","find","user","id","name","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Documents/QuickShell/src/components/KanbanBoard.jsx"],"sourcesContent":["import React from 'react';\r\nimport TicketCard from './TicketCard';\r\nimport Dropdown from './Dropdown';\r\nimport './KanbanBoard.css'; // Pure CSS\r\n\r\nconst KanbanBoard = ({ tickets, users, grouping, ordering, onGroupingChange, onOrderingChange }) => {\r\n  // Helper functions to group and sort\r\n  const groupBy = (tickets, key) => {\r\n    if (!Array.isArray(tickets)) return {};\r\n\r\n    return tickets.reduce((groups, ticket) => {\r\n      const groupKey = ticket[key] || 'No Group';\r\n      if (!groups[groupKey]) groups[groupKey] = [];\r\n      groups[groupKey].push(ticket);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const sortTickets = (tickets) => {\r\n    return [...tickets].sort((a, b) => {\r\n      if (ordering === 'priority') return b.priority - a.priority;\r\n      if (ordering === 'title') return a.title.localeCompare(b.title);\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  // Group tickets based on the selected grouping\r\n  const groupedTickets = groupBy(tickets, grouping);\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      <div className=\"controls\">\r\n        <Dropdown\r\n          label=\"Grouping\"\r\n          options={['status', 'userId', 'priority']}\r\n          selected={grouping}\r\n          onChange={onGroupingChange}\r\n        />\r\n        <Dropdown\r\n          label=\"Ordering\"\r\n          options={['priority', 'title']}\r\n          selected={ordering}\r\n          onChange={onOrderingChange}\r\n        />\r\n      </div>\r\n      <div className=\"board\">\r\n        {Object.keys(groupedTickets).map((groupKey) => {\r\n          // Get the user name if grouping by userId\r\n          const groupName =\r\n            grouping === 'userId'\r\n              ? users.find((user) => user.id === groupKey)?.name || 'Unassigned'\r\n              : groupKey;\r\n\r\n          return (\r\n            <div key={groupKey} className=\"column\">\r\n              <h3 className=\"column-header\">{groupName}</h3>\r\n              <div className=\"tickets\">\r\n                {sortTickets(groupedTickets[groupKey]).map((ticket) => (\r\n                  <TicketCard key={ticket.id} ticket={ticket} users={users} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}