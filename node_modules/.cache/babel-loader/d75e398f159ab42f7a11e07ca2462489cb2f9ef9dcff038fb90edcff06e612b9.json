{"ast":null,"code":"export const fetchTickets=async()=>{try{const response=await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const data=await response.json();return data;// Return the full API response\n}catch(error){console.error('Error fetching data from API:',error);return{tickets:[],users:[]};// Return empty fallback data\n}};","map":{"version":3,"names":["fetchTickets","response","fetch","ok","Error","status","data","json","error","console","tickets","users"],"sources":["C:/Users/hp/OneDrive/Documents/QuickShell/src/services/api.js"],"sourcesContent":["export const fetchTickets = async () => {\r\n  try {\r\n    const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    return data; // Return the full API response\r\n  } catch (error) {\r\n    console.error('Error fetching data from API:', error);\r\n    return { tickets: [], users: [] }; // Return empty fallback data\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,YAAY,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,0DAA0D,CAAC,CACxF,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC,CAC3D,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAAE;AACf,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD,MAAO,CAAEE,OAAO,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAE;AACrC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}